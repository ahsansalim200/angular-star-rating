{"version":3,"sources":["lst-rating.js","templates.js"],"names":["angular","lstRatingDirective","config","restrict","templateUrl","replace","scope","totalNoOfStars","isAnimated","colorBreakPoint","noOfPoints","totalNoOfPoints","link","lstRatingLink","refreshStarList","noOfStarsFilled","Math","round","starList","i","star","starIcon","STAR_CLASS_LIST","toLowerCase","requiredClass","filledAnimatedStar","emptyAnimatedStar","colorBreak","parseInt","belowColorBreak","aboveColorBreak","emptyUnanimatedStar","filledUnanimatedStar","push","$watch","oldValue","newValue","module","directive","constant","run","$templateCache","put"],"mappings":"CAAA,SAAAA,GACA,QAAAC,KACA,GAAAC,IACAC,SAAA,IACAC,YAAA,uCACAC,SAAA,EACAC,OACAC,eAAA,IACAC,WAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,gBAAA,KAEAC,KAAAC,EAGA,OAAAX,GAYA,QAAAW,GAAAP,GACAA,EAAAQ,gBAAA,WAIA,IAAA,GAFAC,GAAAC,KAAAC,MAAAX,EAAAC,eAAAD,EAAAK,gBAAAL,EAAAI,YACAQ,KACAC,EAAA,EAAAA,EAAAb,EAAAC,eAAAY,IAAA,CACA,GAAAC,KAEA,IADAA,EAAAC,SAAAC,EAAAD,SACA,SAAAf,EAAAE,WAAAe,cACAR,EAAAI,EACAC,EAAAI,cAAAF,EAAAG,mBAEAL,EAAAI,cAAAF,EAAAI,sBAGA,IAAApB,EAAAG,iBAAA,UAAAH,EAAAG,gBAAAc,cAAA,CACA,GAAAI,GAAAX,KAAAC,MAAAX,EAAAC,eAAAD,EAAAK,gBACAiB,SAAAtB,EAAAG,iBACAkB,GAAAZ,GAAAA,EAAAI,EACAC,EAAAI,cAAAF,EAAAO,gBACAd,GAAAY,GAAAZ,EAAAI,EACAC,EAAAI,cAAAF,EAAAQ,gBAEAV,EAAAI,cAAAF,EAAAS,wBAGAhB,GAAAI,EACAC,EAAAI,cAAAF,EAAAU,qBAEAZ,EAAAI,cAAAF,EAAAS,mBAIAb,GAAAe,KAAAb,GAEAd,EAAAY,SAAAA,GAEAZ,EAAA4B,OAAA,aAAA,SAAAC,EAAAC,GACA9B,EAAAQ,oBAhDA,GAAAQ,IACAS,oBAAA,wBACAC,qBAAA,yBACAN,kBAAA,8BACAD,mBAAA,+BACAK,gBAAA,yBACAD,gBAAA,mCACAR,SAAA,YA6CArB,GAAAqC,OAAA,2BAAA,4BACAC,UAAA,YAAArC,GACAsC,SAAA,kBAAAjB,IAEAtB,SC1EA,WAAAA,QAAAqC,OAAA,8BAAAG,KAAA,iBAAA,SAAAC,GAAAA,EAAAC,IAAA,uCAAA","file":"lst-rating.min.js","sourcesContent":["(function(angular) {\n    function lstRatingDirective() {\n        var config = {\n            restrict: 'E',\n            templateUrl: 'lst/ui/templates/lst-rating.dir.html',\n            replace: true,\n            scope: {\n                totalNoOfStars: '@',\n                isAnimated: '@',\n                colorBreakPoint: '@',\n                noOfPoints: '=',\n                totalNoOfPoints: '@'\n            },\n            link: lstRatingLink\n        };\n\n        return config;\n    }\n    var STAR_CLASS_LIST = {\n        emptyUnanimatedStar: 'empty-unanimated-star',\n        filledUnanimatedStar: 'filled-unanimated-star',\n        emptyAnimatedStar: 'empty-animated-star animate',\n        filledAnimatedStar: 'filled-animated-star animate',\n        aboveColorBreak: 'filled-unanimated-star',\n        belowColorBreak: 'filled-alternate-unanimated-star',\n        starIcon: 'icon-star'\n    };\n\n    function lstRatingLink(scope) {\n        scope.refreshStarList = function() {\n            //var starClassList = JSON.parse(scope.starClassList);\n            var noOfStarsFilled = Math.round((scope.totalNoOfStars / scope.totalNoOfPoints) * scope.noOfPoints),\n            starList = [];\n            for (var i = 0; i < scope.totalNoOfStars; i++) {\n                var star = {};\n                star.starIcon = STAR_CLASS_LIST.starIcon;\n                if (scope.isAnimated.toLowerCase() === 'true') {\n                    if (i < noOfStarsFilled) {\n                        star.requiredClass = STAR_CLASS_LIST.filledAnimatedStar;\n                    } else {\n                        star.requiredClass = STAR_CLASS_LIST.emptyAnimatedStar;\n                    }\n                } else {\n                    if (scope.colorBreakPoint && scope.colorBreakPoint.toLowerCase() !== 'false') {\n                        var colorBreak = Math.round((scope.totalNoOfStars / scope.totalNoOfPoints) *\n                            parseInt(scope.colorBreakPoint));\n                        if (noOfStarsFilled < colorBreak && i < noOfStarsFilled) {\n                            star.requiredClass = STAR_CLASS_LIST.belowColorBreak;\n                        } else if (noOfStarsFilled >= colorBreak && i < noOfStarsFilled) {\n                            star.requiredClass = STAR_CLASS_LIST.aboveColorBreak;\n                        } else {\n                            star.requiredClass = STAR_CLASS_LIST.emptyUnanimatedStar;\n                        }\n                    } else {\n                        if (i < noOfStarsFilled) {\n                            star.requiredClass = STAR_CLASS_LIST.filledUnanimatedStar;\n                        } else {\n                            star.requiredClass = STAR_CLASS_LIST.emptyUnanimatedStar;\n                        }\n                    }\n                }\n                starList.push(star);\n            }\n            scope.starList = starList;\n        };\n        scope.$watch('noOfPoints', function(oldValue, newValue) {\n            scope.refreshStarList();\n        });\n    }\n\n    angular.module('lst.rating.ui.component', ['lst.rating.ui.templates'])\n        .directive('lstRating', lstRatingDirective)\n        .constant('STAR_CLASS_LIST', STAR_CLASS_LIST);\n\n})(angular);\n","(function(){angular.module(\"lst.rating.ui.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"lst/ui/templates/lst-rating.dir.html\",\"<div class=\\\"lst-rating\\\">\\n    <div class=\\\"star-list\\\">\\n        <div class=\\\"stars\\\" ng-repeat=\\\"star in starList track by $index\\\">\\n            <div class=\\\"{{star.requiredClass}}\\\">\\n                <div class=\\\"empty\\\">\\n                    <div class=\\\"inner\\\">\\n                        <i class=\\\"{{star.starIcon}}\\\"></i>\\n                    </div>\\n                </div>\\n                <div class=\\\"fill\\\">\\n                    <div class=\\\"inner\\\">\\n                        <i class=\\\"{{star.starIcon}}\\\"></i>\\n                    </div>\\n                </div>\\n                <div class=\\\"zoom\\\">\\n                    <div class=\\\"inner\\\">\\n                        <i class=\\\"{{star.starIcon}}\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\");}]);})();"],"sourceRoot":"/source/"}